<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper SYSTEM "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atguigu.gmall.product.mapper.BaseAttrInfoMapper" >
    <!-- namespace 定义接口的全路径
         resultMap:返回的结果集映射
         id：唯一标识
         type：返回的数据类型
     -->
    <resultMap id="baseAttrInfoMap" type="com.atguigu.gmall.model.product.BaseAttrInfo" autoMapping="true">

        <id property="id" column="id"></id>
        <!-- id：主键
         property：实体类的属性名
         column：通过sql语句执行后的字段名
         ofType：返回集合的数据类型
        -->
        <collection property="attrValueList" ofType="com.atguigu.gmall.model.product.BaseAttrValue" autoMapping="true">
            <!--mabatis中如果碰到1：n的关系时，一定要注意字段起别名-->
            <id property="id" column="attr_value_id"></id>
        </collection>
    </resultMap>
    <!--resultMap:返回结果的映射集
        sql语句：通过分类id，查询平台属性以及平台属性值
    -->
    <select id="selectBaseAttrInfoList" resultMap="baseAttrInfoMap">
        select
        bai.id,
        bai.attr_name,
        bai.category_id,
        bai.category_level,
        bav.value_name,
        bav.attr_id,
        bav.id attr_value_id
        from base_attr_info bai inner join base_attr_value bav
        on bai.id=bav.attr_id
        <where>
            <if test="category1Id!=null and category1Id!=0">
                or (bai.category_id = #{category1Id} and bai.category_level=1)
            </if>
            <if test="category2Id!=null and category2Id!=0">
                or (bai.category_id = #{category2Id} and bai.category_level=2)
            </if>
            <if test="category3Id!=null and category3Id!=0">
                or (bai.category_id = #{category3Id} and bai.category_level=3)
            </if>
        </where>
        order by bai.category_level,bai.id;
    </select>

    <select id="selectBaseAttrInfoListBySkuId" resultMap="baseAttrInfoMap">
         SELECT
            bai.id,
            bai.attr_name,
            bai.category_id,
            bai.category_level,
            bav.id attr_value_id,
            bav.value_name,
            bav.attr_id
            FROM
            base_attr_info bai
            INNER JOIN base_attr_value bav ON bai.id = bav.attr_id
            INNER JOIN sku_attr_value sav ON sav.value_id = bav.id
            WHERE
            sav.sku_id = #{skuId}
    </select>
</mapper>